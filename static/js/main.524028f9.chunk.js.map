{"version":3,"sources":["kiel-crew-mobile.JPG","kiel-crew-tablet.JPG","kiel-crew.jpg","App.js","helper/windowSizeHook.js","reportWebVitals.js","index.js"],"names":["App","useState","showImage","setShowImage","countDown","setCountdown","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","isMobile","isTablet","isDesktop","useWindowSize","background","backgroundMobile","backgroundTablet","backgroundDesktop","getBackground","id","setTimeout","clearTimeout","c","className","style","backgroundImage","allow","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAAe,MAA0B,6CCA1B,MAA0B,6CCA1B,MAA0B,sC,MCyD1BA,MAlDf,WAAgB,IAAD,EACqBC,oBAAS,GAD9B,mBACNC,EADM,KACKC,EADL,OAEqBF,mBAAS,IAF9B,mBAENG,EAFM,KAEKC,EAFL,OCLR,WAAyB,MAGQJ,mBAAS,CACzCK,WAAOC,EACPC,YAAQD,IALgB,mBAGrBE,EAHqB,KAGTC,EAHS,KAQ5BC,qBAAU,WAEN,SAASC,IAELF,EAAc,CACVJ,MAAOO,OAAOC,WACdN,OAAQK,OAAOE,cAWvB,OANAF,OAAOG,iBAAiB,SAAUJ,GAGlCA,IAGO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACnD,IACH,IAAMM,EAAWT,EAAWH,MAAQ,IAC9Ba,EAAWV,EAAWH,OAAS,KAAOG,EAAWH,MAAQ,KAE/D,MAAQ,CAAEY,WAAUE,UADFX,EAAWH,OAAS,KACPa,YDtBSE,GAAxBF,GAHL,EAGLD,SAHK,EAGKC,UAAUC,EAHf,EAGeA,UAWtBE,EAVgB,WACpB,IAAIA,EAAaC,EAOjB,OANIJ,IACFG,EAAaE,GAEXJ,IACFE,EAAaG,GAERH,EAEUI,GAenB,OAdAf,qBAAU,WACR,IAAMgB,EAAKC,YAAW,WACpBzB,GAAa,KACZ,KACH,OAAO,WAAQ0B,aAAaF,MAC3B,IACHhB,qBAAU,WACR,IAAMgB,EAAKC,YAAW,WAChBxB,EAAY,GACdC,GAAa,SAAAyB,GAAC,OAAIA,EAAI,OAEvB,KACH,OAAO,WAAQD,aAAaF,MAC3B,CAACvB,IAEF,sBAAK2B,UAAU,MAAf,UACG7B,EACC,qBAAK6B,UAAU,MAAMC,MAAO,CAAEC,gBAAgB,OAAD,OAASX,EAAT,MAA7C,SACE,qBAAKS,UAAU,cAAf,SACE,sBAAKA,UAAU,cAAf,UACE,0DACA,4BAAI3B,WAKV,wBAAQ8B,MAAM,kDAAkDC,IAAI,+BAA+BH,MAAO,CAAE,OAAU,QAAS,MAAS,QAAS,OAAU,SAE5J9B,GAAc,0CACT,0CADS,6CEtCNkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.524028f9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/kiel-crew-mobile.d1e853b1.JPG\";","export default __webpack_public_path__ + \"static/media/kiel-crew-tablet.7316ad07.JPG\";","export default __webpack_public_path__ + \"static/media/kiel-crew.ca0772a1.jpg\";","import React, { useEffect, useState } from \"react\";\nimport backgroundMobile from \"./kiel-crew-mobile.JPG\";\nimport backgroundTablet from \"./kiel-crew-tablet.JPG\";\nimport backgroundDesktop from \"./kiel-crew.jpg\";\nimport { useWindowSize } from \"./helper/windowSizeHook\";\nimport './App.css';\n\nfunction App() {\n  const [showImage, setShowImage] = useState(true);\n  const [countDown, setCountdown] = useState(10);\n  const { isMobile, isTablet, isDesktop } = useWindowSize();\n  const getBackground = () => {\n    let background = backgroundMobile;\n    if (isTablet) {\n      background = backgroundTablet;\n    }\n    if (isDesktop) {\n      background = backgroundDesktop;\n    }\n    return background;\n  };\n  const background = getBackground();\n  useEffect(() => {\n    const id = setTimeout(() => {\n      setShowImage(false);\n    }, 10000);\n    return () => { clearTimeout(id); };\n  }, []);\n  useEffect(() => {\n    const id = setTimeout(() => {\n      if (countDown > 0) {\n        setCountdown(c => c - 1);\n      }\n    }, 1000);\n    return () => { clearTimeout(id); };\n  }, [countDown]);\n  return (\n    <div className=\"App\">\n      {showImage ?\n        <div className=\"img\" style={{ backgroundImage: `url(${background})` }}>\n          <div className=\"spanWrapper\">\n            <div className=\"textWrapper\">\n              <p>Unser Meeting beginnt in:</p>\n              <p>{countDown}</p>\n            </div>\n          </div>\n        </div>\n        :\n        <iframe allow=\"camera; microphone; fullscreen; display-capture\" src=\"https://meet.jit.si/kielcrew\" style={{ \"height\": \"100vh\", \"width\": \"100vw\", \"border\": \"0px\" }}></iframe>\n      }\n      {showImage && (<footer>\n        Mit <span>&hearts;</span> und &#127863; von Thobbe &#38; Yvi.\n      </footer>)}\n    </div>\n  );\n}\n\nexport default App;\n\n","import { useState, useEffect } from \"react\";\n// Hook\nexport function useWindowSize() {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n    });\n\n    useEffect(() => {\n        // Handler to call on window resize\n        function handleResize() {\n            // Set window width/height to state\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n\n        // Add event listener\n        window.addEventListener(\"resize\", handleResize);\n\n        // Call handler right away so state gets updated with initial window size\n        handleResize();\n\n        // Remove event listener on cleanup\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n    const isMobile = windowSize.width < 480;\n    const isTablet = windowSize.width >= 480 && windowSize.width < 1024;\n    const isDesktop = windowSize.width >= 1024;\n    return ({ isMobile, isDesktop, isTablet });\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}